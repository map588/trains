<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node4" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;BlockProperties&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ BLOCK_ID_PROPERTY: String&lt;br/&gt;+ CROSSING_STATE_PROPERTY: String&lt;br/&gt;+ HAS_CROSSING_PROPERTY: String&lt;br/&gt;+ HAS_LIGHT_PROPERTY: String&lt;br/&gt;+ HAS_SWITCH_CON_PROPERTY: String&lt;br/&gt;+ HAS_SWITCH_DIV_PROPERTY: String&lt;br/&gt;+ LINE_PROPERTY: String&lt;br/&gt;+ OCCUPIED_PROPERTY: String&lt;br/&gt;+ SWITCH_LIGHT_STATE_PROPERTY: String&lt;br/&gt;+ SWITCH_STATE_PROPERTY: String&lt;br/&gt;+ SWITCH_STATE_STRING_PROPERTY: String&lt;br/&gt;+ UNDER_MAINTENANCE_PROPERTY: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="510" y="1500" width="317" height="327" as="geometry" />
    </mxCell>
    <mxCell id="node6" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CTCBlockInfo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- blockID: int&lt;br/&gt;- blockLength: int&lt;br/&gt;- convergingBlockID: int&lt;br/&gt;- crossingState: boolean&lt;br/&gt;- divergingBlockOneID: int&lt;br/&gt;- divergingBlockTwoID: int&lt;br/&gt;- hasCrossing: boolean&lt;br/&gt;- hasLight: boolean&lt;br/&gt;- hasSwitchCon: boolean&lt;br/&gt;- hasSwitchDiv: boolean&lt;br/&gt;- line: String&lt;br/&gt;~ map: CTCBlockSubjectMap&lt;br/&gt;- occupied: boolean&lt;br/&gt;- speedLimit: int&lt;br/&gt;- switchLightState: boolean&lt;br/&gt;- switchState: boolean&lt;br/&gt;- underMaintenance: boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ getBlockID(): int&lt;br/&gt;~ getBlockLength(): int&lt;br/&gt;~ getCrossingState(): boolean&lt;br/&gt;~ getHasCrossing(): boolean&lt;br/&gt;~ getHasLight(): boolean&lt;br/&gt;~ getHasSwitchCon(): boolean&lt;br/&gt;~ getHasSwitchDiv(): boolean&lt;br/&gt;~ getLine(): String&lt;br/&gt;~ getOccupied(): boolean&lt;br/&gt;~ getSpeedLimit(): int&lt;br/&gt;~ getSwitchLightState(): boolean&lt;br/&gt;+ getSwitchState(): boolean&lt;br/&gt;~ getSwitchStateString(): String&lt;br/&gt;~ getUnderMaintenance(): boolean&lt;br/&gt;~ setCrossingState(boolean): void&lt;br/&gt;~ setOccupied(boolean): void&lt;br/&gt;~ setSwitchLightState(boolean): void&lt;br/&gt;~ setSwitchState(boolean): void&lt;br/&gt;~ setUnderMaintenance(boolean): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="452" y="-9" width="273" height="905" as="geometry" />
    </mxCell>
    <mxCell id="node12" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CTCBlockSubject&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ blockInfo: CTCBlockInfo&lt;br/&gt;- properties: ObservableHashMap&amp;lt;String, Property&amp;lt;?&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ getBlockInfo(): CTCBlockInfo&lt;br/&gt;+ getBooleanProperty(String): BooleanProperty&lt;br/&gt;+ getIntegerProperty(String): IntegerProperty&lt;br/&gt;+ getProperty(String): Property&amp;lt;?&amp;gt;&lt;br/&gt;+ getStringProperty(String): StringProperty&lt;br/&gt;~ hasCrossing(): boolean&lt;br/&gt;~ hasLight(): boolean&lt;br/&gt;+ setProperty(String, Object): void&lt;br/&gt;+ updateStringProperty(String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="897" y="1491" width="383" height="305" as="geometry" />
    </mxCell>
    <mxCell id="node15" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CTCBlockSubjectMap&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- INSTANCE: CTCBlockSubjectMap&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getInstance(): CTCBlockSubjectMap&lt;br/&gt;+ getSubject(int): CTCBlockSubject&lt;br/&gt;+ getSubjects(): ObservableHashMap&amp;lt;Integer, CTCBlockSubject&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1128" y="1935" width="441" height="148" as="geometry" />
    </mxCell>
    <mxCell id="node3" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CTCOfficeImpl&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ OFFICE: CTCOfficeImpl&lt;br/&gt;- autoMode: boolean&lt;br/&gt;- maintenanceMode: boolean&lt;br/&gt;- manualMode: boolean&lt;br/&gt;- mode: int&lt;br/&gt;+ scheduleLibrary: ScheduleLibrary&lt;br/&gt;- ticketSales: int&lt;br/&gt;- time: int&lt;br/&gt;~ track: Map&amp;lt;String, ArrayList&amp;lt;CTCBlockSubject&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ getAutoMode(): boolean&lt;br/&gt;+ getBlockOccupancy(boolean, int): boolean&lt;br/&gt;+ getCrossingState(boolean, int): boolean&lt;br/&gt;+ getLightState(boolean, int): boolean&lt;br/&gt;~ getMaintenanceMode(): boolean&lt;br/&gt;~ getManualMode(): boolean&lt;br/&gt;~ getMode(): int&lt;br/&gt;+ getSwitchState(boolean, int): boolean&lt;br/&gt;~ getTicketSales(): int&lt;br/&gt;~ getTime(): int&lt;br/&gt;+ getUnderMaintenance(boolean, int): boolean&lt;br/&gt;~ setAutoMode(boolean): void&lt;br/&gt;+ setBlockOccupancy(boolean, int, boolean): void&lt;br/&gt;+ setCrossingState(boolean, int, boolean): void&lt;br/&gt;+ setLightState(boolean, int, boolean): void&lt;br/&gt;~ setMaintenanceMode(boolean): void&lt;br/&gt;~ setManualMode(boolean): void&lt;br/&gt;~ setMode(int): void&lt;br/&gt;+ setSwitchState(boolean, int, boolean): void&lt;br/&gt;~ setTicketSales(int): void&lt;br/&gt;~ setTime(int): void&lt;br/&gt;~ setUnderMaintenance(boolean, int, boolean): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1291" y="-9" width="354" height="785" as="geometry" />
    </mxCell>
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CTCOfficeManager&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- AddStop: Button&lt;br/&gt;- AddTrain: Button&lt;br/&gt;- DispatchButton: Button&lt;br/&gt;- RemoveStop: Button&lt;br/&gt;- RemoveTrain: Button&lt;br/&gt;- arrivalTimeColumn: TableColumn&amp;lt;TrainScheduleSubject, Integer&amp;gt;&lt;br/&gt;- arrivalTimeSelector: ComboBox&amp;lt;Integer&amp;gt;&lt;br/&gt;~ blockMap: CTCBlockSubjectMap&lt;br/&gt;- blockNumberColumn: TableColumn&amp;lt;CTCBlockSubject, Integer&amp;gt;&lt;br/&gt;- blockSelection: ComboBox&amp;lt;Integer&amp;gt;&lt;br/&gt;- blockTable: TableView&amp;lt;CTCBlockSubject&amp;gt;&lt;br/&gt;- carNumberColumn: TableColumn&amp;lt;TrainScheduleSubject, Integer&amp;gt;&lt;br/&gt;- carsSelector: Spinner&amp;lt;Integer&amp;gt;&lt;br/&gt;~ crossingColors: Map&amp;lt;CTCBlockSubject, ObjectProperty&amp;lt;Paint&amp;gt;&amp;gt;&lt;br/&gt;- crossingStateColumn: TableColumn&amp;lt;CTCBlockSubject, Paint&amp;gt;&lt;br/&gt;- crossingStateToggle: Button&lt;br/&gt;- departureTimeColumn: TableColumn&amp;lt;TrainScheduleSubject, Integer&amp;gt;&lt;br/&gt;- departureTimeSelector: ComboBox&amp;lt;Integer&amp;gt;&lt;br/&gt;- dispatchTimeColumn: TableColumn&amp;lt;TrainScheduleSubject, Integer&amp;gt;&lt;br/&gt;- dispatchTimeSelector: ComboBox&amp;lt;Integer&amp;gt;&lt;br/&gt;- lineColumn: TableColumn&amp;lt;TrainScheduleSubject, String&amp;gt;&lt;br/&gt;- lineSelection: ComboBox&amp;lt;String&amp;gt;&lt;br/&gt;- lineStopSelector: ChoiceBox&amp;lt;String&amp;gt;&lt;br/&gt;- lineTrainSelector: ChoiceBox&amp;lt;Integer&amp;gt;&lt;br/&gt;- mainAnchor: AnchorPane&lt;br/&gt;- mainSplit: SplitPane&lt;br/&gt;~ maintenanceColors: Map&amp;lt;CTCBlockSubject, ObjectProperty&amp;lt;Paint&amp;gt;&amp;gt;&lt;br/&gt;- maintenanceToggle: Button&lt;br/&gt;- occupationLightColumn: TableColumn&amp;lt;CTCBlockSubject, Boolean&amp;gt;&lt;br/&gt;- saveScheduleButton: Button&lt;br/&gt;- saveStopButton: Button&lt;br/&gt;- saveTrainButton: Button&lt;br/&gt;- scheduleDateModColumn: TableColumn&amp;lt;ScheduleFileSubject, String&amp;gt;&lt;br/&gt;- scheduleEditTable: TableView&amp;lt;TrainScheduleSubject&amp;gt;&lt;br/&gt;~ scheduleLibrary: ScheduleLibrary&lt;br/&gt;- scheduleNameColumn: TableColumn&amp;lt;ScheduleFileSubject, String&amp;gt;&lt;br/&gt;- scheduleSelector: ComboBox&amp;lt;String&amp;gt;&lt;br/&gt;- scheduleTable: TableView&amp;lt;ScheduleFileSubject&amp;gt;&lt;br/&gt;- scheduledTrainColumn: TableColumn&amp;lt;TrainScheduleSubject, Integer&amp;gt;&lt;br/&gt;- selectScheduleButton: Button&lt;br/&gt;- stationBlockIDColumn: TableColumn&amp;lt;TrainScheduleSubject, Integer&amp;gt;&lt;br/&gt;- stationStopSelector: ChoiceBox&amp;lt;Integer&amp;gt;&lt;br/&gt;- stopSelector: ComboBox&amp;lt;Integer&amp;gt;&lt;br/&gt;~ switchColors: Map&amp;lt;CTCBlockSubject, ObjectProperty&amp;lt;Paint&amp;gt;&amp;gt;&lt;br/&gt;- switchLightColumn: TableColumn&amp;lt;CTCBlockSubject, Paint&amp;gt;&lt;br/&gt;- switchLightToggle: Button&lt;br/&gt;- switchStateColumn: TableColumn&amp;lt;CTCBlockSubject, String&amp;gt;&lt;br/&gt;- switchStateToggle: Button&lt;br/&gt;- trainIDSelector: ChoiceBox&amp;lt;Integer&amp;gt;&lt;br/&gt;- trainStopSelector: ChoiceBox&amp;lt;Integer&amp;gt;&lt;br/&gt;- underMaintenanceColumn: TableColumn&amp;lt;CTCBlockSubject, Paint&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- createColoredCircleCell(): TableCell&amp;lt;CTCBlockSubject, Paint&amp;gt;&lt;br/&gt;- crossingColorListener(CTCBlockSubject): void&lt;br/&gt;+ initialize(): void&lt;br/&gt;- maintenanceColorListener(CTCBlockSubject): void&lt;br/&gt;- setupMapChangeListener(): void&lt;br/&gt;- switchColorListener(CTCBlockSubject): void&lt;br/&gt;- toggleProperty(String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-110" y="-13" width="477" height="1433" as="geometry" />
    </mxCell>
    <mxCell id="node5" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CTCOfficeSubject&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- autoMode: BooleanProperty&lt;br/&gt;- maintenanceMode: BooleanProperty&lt;br/&gt;- manualMode: BooleanProperty&lt;br/&gt;- mode: IntegerProperty&lt;br/&gt;- ticketSales: IntegerProperty&lt;br/&gt;- time: IntegerProperty&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getProperty(String): Property&amp;lt;?&amp;gt;&lt;br/&gt;+ setProperty(String, Object): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-106" y="1947" width="269" height="233" as="geometry" />
    </mxCell>
    <mxCell id="node13" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CTCOfficeTB&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2192" y="1949" width="153" height="30" as="geometry" />
    </mxCell>
    <mxCell id="node8" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScheduleFile&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- lastModified: String&lt;br/&gt;- multipleTrainScheduleSubjects: HashMap&amp;lt;Integer, TrainScheduleSubject&amp;gt;&lt;br/&gt;- multipleTrainSchedules: HashMap&amp;lt;Integer, TrainSchedule&amp;gt;&lt;br/&gt;- scheduleFileName: String&lt;br/&gt;- subject: ScheduleFileSubject&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getLastModified(): String&lt;br/&gt;+ getMultipleTrainScheduleSubjects(): HashMap&amp;lt;Integer, TrainScheduleSubject&amp;gt;&lt;br/&gt;+ getMultipleTrainSchedules(): HashMap&amp;lt;Integer, TrainSchedule&amp;gt;&lt;br/&gt;+ getScheduleFileName(): String&lt;br/&gt;+ getTrainSchedule(int): TrainSchedule&lt;br/&gt;+ putTrainSchedule(int, TrainSchedule): void&lt;br/&gt;+ removeTrainSchedule(int): void&lt;br/&gt;+ setLastModified(String): void&lt;br/&gt;+ setScheduleFileName(String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-98" y="1495" width="532" height="377" as="geometry" />
    </mxCell>
    <mxCell id="node9" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScheduleFileSubject&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- properties: ObservableHashMap&amp;lt;String, Property&amp;lt;?&amp;gt;&amp;gt;&lt;br/&gt;- schedule: ScheduleFile&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getProperty(String): Property&amp;lt;?&amp;gt;&lt;br/&gt;+ getSchedule(): ScheduleFile&lt;br/&gt;+ getStringProperty(String): StringProperty&lt;br/&gt;+ setProperty(String, Object): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="237" y="1951" width="383" height="185" as="geometry" />
    </mxCell>
    <mxCell id="node7" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScheduleLibrary&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- INSTANCE: ScheduleLibrary&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getInstance(): ScheduleLibrary&lt;br/&gt;+ getSubjects(): ObservableHashMap&amp;lt;String, ScheduleFileSubject&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1663" y="1947" width="450" height="122" as="geometry" />
    </mxCell>
    <mxCell id="node10" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScheduleProperties&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ARRIVAL_TIME_PROPERTY: String&lt;br/&gt;+ CAR_COUNT_PROPERTY: String&lt;br/&gt;+ DEPARTURE_TIME_PROPERTY: String&lt;br/&gt;+ DESTINATION_PROPERTY: String&lt;br/&gt;+ DISPATCH_TIME_PROPERTY: String&lt;br/&gt;+ LAST_MODIFIED_PROPERTY: String&lt;br/&gt;+ SCHEDULE_FILE_NAME_PROPERTY: String&lt;br/&gt;+ TRAIN_ID_PROPERTY: String&lt;br/&gt;+ TRAIN_LINE_PROPERTY: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1814" y="1496" width="308" height="255" as="geometry" />
    </mxCell>
    <mxCell id="node14" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TrainSchedule&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- carCount: int&lt;br/&gt;- dispatchTime: int&lt;br/&gt;- line: String&lt;br/&gt;- stops: List&amp;lt;TrainStop&amp;gt;&lt;br/&gt;~ subject: TrainScheduleSubject&lt;br/&gt;- trainID: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ addStop(TrainStop): void&lt;br/&gt;+ addStop(int, int, int, List&amp;lt;Integer&amp;gt;, List&amp;lt;Integer&amp;gt;, List&amp;lt;Integer&amp;gt;): void&lt;br/&gt;+ clearStops(): void&lt;br/&gt;+ getCarCount(): int&lt;br/&gt;+ getDestination(int): int&lt;br/&gt;+ getDispatchTime(): int&lt;br/&gt;+ getLine(): String&lt;br/&gt;+ getStop(int): TrainStop&lt;br/&gt;+ getStopCount(): int&lt;br/&gt;+ getStops(): List&amp;lt;TrainStop&amp;gt;&lt;br/&gt;+ getSubject(): TrainScheduleSubject&lt;br/&gt;+ getTrainID(): int&lt;br/&gt;+ printStops(): void&lt;br/&gt;+ removeStop(int): void&lt;br/&gt;+ setAuthority(int, int, int): void&lt;br/&gt;+ setCarCount(int): void&lt;br/&gt;+ setDestination(int, int): void&lt;br/&gt;+ setDispatchTime(int): void&lt;br/&gt;+ setLine(String): void&lt;br/&gt;+ setSpeed(int, int, int): void&lt;br/&gt;+ setStops(List&amp;lt;TrainStop&amp;gt;): void&lt;br/&gt;+ setTrainID(int): void&lt;br/&gt;+ updateStop(int, int, int, int, List&amp;lt;Integer&amp;gt;, List&amp;lt;Integer&amp;gt;, List&amp;lt;Integer&amp;gt;): void&lt;br/&gt;+ updateStop(int, TrainStop): void&lt;br/&gt;+ updateStopArrivalTime(int, int): void&lt;br/&gt;+ updateStopAuthorityList(int, List&amp;lt;Integer&amp;gt;): void&lt;br/&gt;+ updateStopBlockList(int, List&amp;lt;Integer&amp;gt;): void&lt;br/&gt;+ updateStopDepartureTime(int, int): void&lt;br/&gt;+ updateStopSpeedList(int, List&amp;lt;Integer&amp;gt;): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="796" y="3" width="424" height="881" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TrainScheduleSubject&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- properties: ObservableHashMap&amp;lt;String, Property&amp;lt;?&amp;gt;&amp;gt;&lt;br/&gt;+ schedule: TrainSchedule&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getIntegerProperty(String): IntegerProperty&lt;br/&gt;+ getIntegerProperty(String, int): IntegerProperty&lt;br/&gt;+ getProperty(String): Property&amp;lt;?&amp;gt;&lt;br/&gt;+ getSchedule(): TrainSchedule&lt;br/&gt;+ getStringProperty(String): StringProperty&lt;br/&gt;+ setIntegerProperty(String, int, Object): void&lt;br/&gt;+ setProperty(String, Object): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1357" y="1495" width="383" height="257" as="geometry" />
    </mxCell>
    <mxCell id="node11" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TrainStop&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- arrivalTime: int&lt;br/&gt;- authorityList: List&amp;lt;Integer&amp;gt;&lt;br/&gt;- departureTime: int&lt;br/&gt;- routePath: List&amp;lt;Integer&amp;gt;&lt;br/&gt;- speedList: List&amp;lt;Integer&amp;gt;&lt;br/&gt;- stationBlockID: int&lt;br/&gt;- subject: TrainStopSubject&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getArrivalTime(): int&lt;br/&gt;+ getAuthorityList(): List&amp;lt;Integer&amp;gt;&lt;br/&gt;+ getDepartureTime(): int&lt;br/&gt;+ getRoutePath(): List&amp;lt;Integer&amp;gt;&lt;br/&gt;+ getSpeedList(): List&amp;lt;Integer&amp;gt;&lt;br/&gt;+ getStationBlockID(): int&lt;br/&gt;+ getSubject(): TrainStopSubject&lt;br/&gt;+ setArrivalTime(int): void&lt;br/&gt;+ setAuthorityList(List&amp;lt;Integer&amp;gt;): void&lt;br/&gt;+ setDepartureTime(int): void&lt;br/&gt;+ setRoutePath(List&amp;lt;Integer&amp;gt;): void&lt;br/&gt;+ setSpeedList(List&amp;lt;Integer&amp;gt;): void&lt;br/&gt;+ setStationBlockID(int): void&lt;br/&gt;+ updateAuthorityList(int, int): void&lt;br/&gt;+ updateBlockList(int, int): void&lt;br/&gt;+ updateSpeedList(int, int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1714" y="-13" width="269" height="593" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TrainStopSubject&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- properties: ObservableHashMap&amp;lt;String, Object&amp;gt;&lt;br/&gt;+ stop: TrainStop&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getIntegerProperty(String): Integer&lt;br/&gt;+ getProperty(String): Property&amp;lt;?&amp;gt;&lt;br/&gt;+ setProperty(String, Object): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="716" y="1943" width="345" height="161" as="geometry" />
    </mxCell>
  </root>
</mxGraphModel>